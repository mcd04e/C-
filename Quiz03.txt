CSC180 Quiz #3

1. Run the program step-by-step using F11 key (step into) and explain the code.
using System;
class CSC205Quiz03
{
    static void printRow(int n)
    {
        if (n < 1)                  5. n=5 and is not less than 1 so return is not invoked.
            return;                 8. return returns all the iterations of printRow(n-1) it ran...printRow(1),(2),(3),(4),(5).
        Console.Write("#");         6. # is printed to the console on the same line.
        printRow(n - 1);            7. printRow method is called looped, subtracting 1 until n=0.
    }
    static void printPattern(int n)
    {
        if (n < 1)                  3. n=5 and is not less than 1 so return is not invoked.
            return;                 11.return returns all the iterations of printPattern(n-1) it ran...printPattern(1),(2),(3),(4),(5).
        printRow(n);                4. printRow method is called passing int n=5.
        Console.WriteLine();        9. Starts a new line.
        printPattern(n - 1);        10.printPattern is looped subtracting 1 until n=0.
    }
    public static void Main()       1. Starts with the Main method.
    {
        printPattern(5);            2. Calls printPattern method with int n set to 5.
    }
}
The result of the program of recursive methods calling themselves in loops is an upside down right triangle, printed in hashes.
#####
####
###
##
#


2. Write a complete method that computes the distance between two points (x1, y1, z1) and (x2, y2, z2) in space.
https://www.calculatorsoup.com/calculators/geometry-solids/distance-two-points.php
using System;
namespace CSC180 
{
	class ThreeD
	{
	public static void Distance(double x1, double y1, double z1, double x2, double y2, double z2)
	{
		double d = Math.Pow((Math.Pow(x2 - x1, 2) + Math.Pow(y2 - y1, 2) + Math.Pow(z2 - z1, 2) * 1.0), 0.5);
		Console.WriteLine(d);
	}

	public static void Main()
	{
		double x1 = 1;
		double y1 = 1;
		double z1 = 1;
		double x2 = 2;
		double y2 = 2;
		double z2 = 2;
		Distance(x1, y1, z1, x2, y2, z2);
	}
  }
}